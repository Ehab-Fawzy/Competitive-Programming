// UVA 193 - Graph Coloring
// https://uva.onlinejudge.org/index.php?option=com_onlinejudge&Itemid=8&page=show_problem&problem=129

#include <bits/stdc++.h>

#define F first
#define S second
#define pb push_back
#define ll long long
#define vi vector<ll>
#define all(x) x.begin() , x.end()
#define mod(x,m) ((x%m + m )%m)

using namespace std;
void OJ();
const int MAX = 109;

int n , k , dp[MAX]; set<int> adj[MAX];

bool can( int u ){
    bool ret = true;
    for ( auto v : adj[u] )
        ret &= (dp[v] != 1);
    return ret;
}

int mx; bool print;
void go( int u , int cnt ){
    if ( u > n ){
        if ( print && cnt == mx ){
            cout << mx << "\n";

            int cnt = 0;
            for ( int i = 1; i <= n; ++i ){
                if ( dp[i] == 1 ){
                    cnt++;
                }
            }

            for ( int i = 1; i <= n; ++i ){
                if ( dp[i] == 1 && cnt == 1 ){
                    cout << i; cnt--;
                }
                else if ( dp[i] == 1 && cnt > 1 ){
                    cout << i << " "; cnt--;
                }
            }
            cout << "\n"; print = 0;
        }
        mx = max(mx , cnt);
        return;
    }

    go(u + 1, cnt );
    if ( can(u) ){
        dp[u] = 1;
        go(u + 1 , cnt + 1 );
        dp[u] = 2;
    }
}

int main(){
    ios::sync_with_stdio(0); cin.tie(0); cout.tie(0); OJ();

    int q; cin >> q;
    while ( q-- ){
        cin >> n >> k;
        for( int i = 0; i < k; ++i ){
            int u , v; cin >> u >> v;
            adj[u].insert(v);
            adj[v].insert(u);
        }

        mx = 0; print = false;
        for ( int i = 0; i < MAX; ++i ){
            dp[i] = 2;
        }

        go(1 , 0); print = true; go(1 , 0);

        for ( int i = 0; i < MAX; ++i ){
            adj[i].clear();
        }
    }
    return  0;
}

void OJ(){
#ifndef ONLINE_JUDGE
    freopen( "C:\\Users\\ehab\\Desktop\\Code Forces\\CF\\in.txt" , "r" , stdin  );
    freopen( "C:\\Users\\ehab\\Desktop\\Code Forces\\CF\\out.txt", "w" , stdout );
#endif // ONLINE_JUDGE
}
ll binEXP( ll x , ll pw , ll MOD )
{ ll res=1; while(pw>0){ pw%2 ? res *= x : 0; x *= x; x%=MOD; pw /= 2; res%= MOD; } return res%=MOD; }
