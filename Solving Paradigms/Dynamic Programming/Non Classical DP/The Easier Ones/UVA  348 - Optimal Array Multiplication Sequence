// 348 - Optimal Array Multiplication Sequence
// https://onlinejudge.org/index.php?option=com_onlinejudge&Itemid=8&category=807&page=show_problem&problem=284

#include <bits/stdc++.h>
#include <cstdio>
#include <cstring>
#include <cstdlib>

#include <ext/pb_ds/assoc_container.hpp> // Common file
#include <ext/pb_ds/tree_policy.hpp>
#include <functional> // for less

#define FASTIO ios::sync_with_stdio(0); cin.tie(0);
#define show(x) cout << #x << " = " << x << "\n"
#define mem( a , b ) memset( a , b , sizeof a )
#define popcnt(x) __builtin_popcount(x)
#define all(x) x.begin() , x.end()
#define SZ(a) (int)a.size()
#define ll  long long
#define ld  long double
#define vii vector  <ll>
#define dqi deque   <ll>
#define sii set     <ll>
#define vpi vector  <pii>
#define mii map     <ll,ll>
#define pii pair    <ll,ll>
#define pi pair     <int,int>
#define vss vector  <string>
#define pb  push_back
#define F   first
#define S   second
#define L   length()
#define PI  3.141592654
#define OO (ll)1e18
#define mod(x,m) (x%m + m )%m
#define EPS 1e-9
using namespace std;
using namespace __gnu_pbds;
void ONLINE__JUDGE();

typedef tree<ld, null_type, less<ld>, rb_tree_tag,
            tree_order_statistics_node_update>
    ordered_set;

pii swapii( pii pr ){ return { pr.S , pr.F }; }
int dx[] = {  0 ,  0 , -1 , +1 , -1 , +1 , -1 , +1 };
int dy[] = { -1 , +1 ,  0 ,  0 , -1 , +1 , +1 , -1 };

const ll MOD = 1e9 + 7;
const ll MAX = 1e4 + 9;

ll x , dp[12][12]; vpi vec;
ll go( ll l , ll r )
{
    if ( l   == r ) return 0;
    ll& ret = dp[l][r];
    if ( ~ret ) return ret;

    ll mn = OO;
    for ( int j = l; j < r; ++j )
        mn = min( mn , go( l , j ) + go( j+1 , r) + vec[l].F*vec[j].S*vec[r].S );
    return ret = mn;
}

vector<string> seq;
void build( ll l , ll r )
{
    if ( l == r ) return;
    for ( int j = l; j < r; ++j )
       if ( go( l , j ) + go( j+1 , r) + vec[l].F*vec[j].S*vec[r].S == go( l , r ) )
       {
           seq[l] = "(" + seq[l];
           seq[r] = seq[r] + ")";
           build( l , j ); build( j+1 , r ); return;
       }
}


int main()
{
    FASTIO //ONLINE__JUDGE();

    ll cse = 1;
    while ( cin >> x && x != 0 )
    {
        seq.clear(); vec.clear(); vec.resize(x);
        for ( auto& i : vec ) cin >> i.F >> i.S;
        mem( dp , -1 ); go( 0 , x-1 );

        cout << "Case " << cse++ << ": ";
        for ( int i = 0; i < x; ++i )
        {
            string t = "A";
            if ( i+1 == 10 ) t += "10";
            else t += (char)( i+1 + '0' );
            seq.pb(t);
        }
        build( 0 , x-1 );
        for ( int i = 0; i < SZ(seq); ++i )
        {
            cout << seq[i];
            if ( i+1 < x ) cout << " x ";
        }
        cout << "\n";
    }
    return 0;
}


void ONLINE__JUDGE()
{
    #ifndef ONLINE_JUDGE
    freopen( "inp.c"         , "r" , stdin  );
    //freopen( "OutPut.txt"   , "w" , stdout );
    #endif // ONLINE_JUDGE
}
