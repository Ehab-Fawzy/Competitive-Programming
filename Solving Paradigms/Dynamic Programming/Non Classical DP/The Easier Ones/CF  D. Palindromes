// D. Palindromes
// https://codeforces.com/problemset/problem/137/D

#include <bits/stdc++.h>
#include <cstdio>
#include <cstring>
#include <cstdlib>
 
#include <ext/pb_ds/assoc_container.hpp> // Common file
#include <ext/pb_ds/tree_policy.hpp>
#include <functional> // for less
 
 
#define FASTIO ios::sync_with_stdio(0); cin.tie(0);
#define show(x) cout << #x << " = " << x << "\n"
#define mem( a , b ) memset( a , b , sizeof a )
#define popcnt(x) __builtin_popcount(x)
#define all(x) x.begin() , x.end()
#define SZ(a) (int)a.size()
#define ll  long long
#define ld  long double
#define vii vector  <ll>
#define dqi deque   <ll>
#define sii set     <ll>
#define vpi vector  <pii>
#define mii map     <ll,ll>
#define pii pair    <ll,ll>
#define pi pair     <int,int>
#define vss vector  <string>
#define pb  push_back
#define F   first
#define S   second
#define L   length()
#define PI  3.141592654
#define OO (ll)1e18
#define mod(x,m) (x%m + m )%m
#define EPS 1e-9
using namespace std;
using namespace __gnu_pbds;
void ONLINE__JUDGE();
 
typedef tree<ld, null_type, less<ld>, rb_tree_tag,
            tree_order_statistics_node_update>
    ordered_set;
 
pii swapii( pii pr ){ return { pr.S , pr.F }; }
int dx[] = {  0 ,  0 , -1 , +1 , -1 , +1 , -1 , +1 };
int dy[] = { -1 , +1 ,  0 ,  0 , -1 , +1 , +1 , -1 };
 
const ll MOD = 1e9 + 7;
const ll MAX = 1e5 + 9;
 
string s; ll k , l , dp[509][509];
string saveSubSeg[509][509];
string savePalind[509][509];
ll changeValue[509][509];
 
void writeChange( string t , ll i , ll j )
{
    string nwT = t;
    ll cnt = 0; ll lPtr = 0 , rPtr = t.L - 1;
    while ( lPtr < rPtr )
    {
        if ( t[lPtr] != t[rPtr] )
        {
            cnt++; nwT[rPtr] = nwT[lPtr];
        }
        lPtr++; rPtr--;
    }
    savePalind[i][j]  = nwT;
    changeValue[i][j] = cnt;
}
 
ll go( ll i , ll rem )
{
    if ( i == l ) return 0;
 
    ll& ret = dp[i][rem];
    if ( ~ret ) return ret;
 
    ll mn = OO;
    if ( rem == 1 )
    {
        mn = min( mn , changeValue[i][l-1] + go( l , rem - 1 ) );
    }
    else
    {
        for ( int j = i; j < l; ++j )
        {
            mn = min( mn , changeValue[i][j] + go( j+1 , rem-1 ) );
        }
    }
    return ret = mn;
}
 
void build( ll i , ll rem )
{
    if ( i == l ) return;
 
    ll mn = OO;
    if ( rem == 1 )
    {
        mn = min( mn , changeValue[i][l-1] + go( l , rem - 1 ) );
        if ( mn == go( i , rem ) )
        {
            cout << savePalind[i][l-1];
        }
        return;
    }
    else
    {
        for ( int j = i; j < l; ++j )
        {
            mn = min( mn , changeValue[i][j] + go( j+1 , rem-1 ) );
            if ( mn == go( i , rem ) )
            {
                cout << savePalind[i][j];
                if ( j+1 != l ) cout << "+";
                build( j+1 , rem-1 );
                return;
            }
        }
    }
}
 
 
int main()
{
    FASTIO ONLINE__JUDGE();
 
    cin >> s >> k; l = s.L;
 
    for ( int i = 0; i < l; ++i )
    {
        string t = "";
        for ( int j = i; j < l; ++j )
        {
            t += s[j]; saveSubSeg[i][j] = t;
            writeChange( t , i , j );
        }
    }
 
    mem( dp , -1 );
    cout << go( 0 , k ) << "\n";
    build( 0 , k );
    return 0;
}
 
 
void ONLINE__JUDGE()
{
    #ifndef ONLINE_JUDGE
    freopen( "inp.c"         , "r" , stdin  );
    //freopen( "OutPut.txt"   , "w" , stdout );
    #endif // ONLINE_JUDGE
}
