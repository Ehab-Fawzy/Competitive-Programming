// 231 - Testing the CATCHER
// https://uva.onlinejudge.org/index.php?option=com_onlinejudge&Itemid=8&page=show_problem&problem=167

#include <bits/stdc++.h>
#include <cstdio>
#include <cstring>
#include <cstdlib>

#define FASTIO ios::sync_with_stdio(NULL); cin.tie(NULL);
#define mem( a , b ) memset( a , b , sizeof a )
#define popcnt(x) __builtin_popcount(x)
#define all(x) x.begin() , x.end()
#define SZ(a) (int)a.size()
#define ll  long long
#define ld  long double
#define vii vector  <ll>
#define dqi deque   <ll>
#define sii set     <ll>
#define mii map     <ll,ll>
#define pii pair    <ll,ll>
#define vss vector  <string>
#define pb  push_back
#define F   first
#define S   second
#define L   length()
#define PI  3.141592654
#define OO (ll)1e18
using namespace std;
void ONLINE__JUDGE();

pii swapii( pii pr ){ return { pr.S , pr.F }; }
int dx[] = {  0 ,  0 , -1 , +1 , -1 , +1 , -1 , +1 };
int dy[] = { -1 , +1 ,  0 ,  0 , -1 , +1 , +1 , -1 };

const int mod = 7901;
const int MAX = 1e4 + 9;

ll LIS( vii vec , bool showSequence = 0 )
{
    ll n   = SZ(vec); vii I( n+1 , OO ) , l( n , 1 ); I[0] *= -1;
    ll lis = 1;
    for ( int j = 0; j < n; ++j )
    {
        ll idx = upper_bound( all(I) , vec[j] ) - I.begin();
        I[idx] = vec[j]; l[j] = idx; lis = max( lis , idx );
    }
    if ( showSequence )
    {
        dqi lisSeq; ll cur = lis+1;
        for ( int i = n-1; i >= 0; --i )
        {
            if ( l[i] == cur-1 )
            {
                lisSeq.push_front(vec[i]); cur--;
            }
        }
        for ( ll i : lisSeq ) cout << i << " ";
        cout << "\n";
    }
    return lis;
}

ll x;

int main()
{
    ll cse = 1; bool ok = 0;
    while ( 1 )
    {
        cin >> x;
        if ( x == -1 ) break;
        else
        {
            if ( !ok ) ok = 1;
            else cout << "\n";
            dqi vec; vec.push_front(x);
            while ( cin >> x && x != -1 ) vec.push_front(x);

            vii seq;
            for ( ll i : vec ) seq.pb( i );

            cout << "Test #" << cse++ << ":\n";
            cout << "  maximum possible interceptions: ";
            cout << LIS( seq , 0 ) << "\n";
        }
    }
    return 0;
}

void ONLINE__JUDGE()
{
    #ifndef ONLINE_JUDGE
    freopen( "inp.c"         , "r" , stdin  );
    //freopen( "OutPut.txt"   , "w" , stdout );
    #endif // ONLINE_JUDGE
}
