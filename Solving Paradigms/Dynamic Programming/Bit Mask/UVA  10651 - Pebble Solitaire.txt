// 10651 - Pebble Solitaire
// https://onlinejudge.org/index.php?option=com_onlinejudge&Itemid=8&page=show_problem&problem=1592

#include <bits/stdc++.h>
#include <cstdio>
#include <cstring>
#include <cstdlib>

#define FASTIO ios::sync_with_stdio(0); cin.tie(0);
#define show(x) cout << #x << " = " << x << "\n"
#define mem( a , b ) memset( a , b , sizeof a )
#define popcnt(x) __builtin_popcount(x)
#define all(x) x.begin() , x.end()
#define SZ(a) (int)a.size()
#define ll  long long
#define ld  long double
#define vii vector  <ll>
#define dqi deque   <ll>
#define sii set     <ll>
#define vpi vector  <pii>
#define mii map     <ll,ll>
#define pii pair    <ll,ll>
#define pi pair     <int,int>
#define vss vector  <string>
#define pb  push_back
#define F   first
#define S   second
#define L   length()
#define PI  3.141592654
#define OO (ll)1e18
#define mod(x,m) (x%m + m )%m
using namespace std;
void ONLINE__JUDGE();

pii swapii( pii pr ){ return { pr.S , pr.F }; }
int dx[] = {  0 ,  0 , -1 , +1 , -1 , +1 , -1 , +1 };
int dy[] = { -1 , +1 ,  0 ,  0 , -1 , +1 , +1 , -1 };

const ll MOD = 1e9 + 7;
const ll MAX = 1e7 + 9;

struct bitM
{
    int     setbit( int msk , int idx ){ msk |= (1<<idx); return msk; }
    bool    getbit( int msk , int idx ){ return msk&(1<<idx); }
    int     reverseBit( int msk , int idx ){ msk ^= (1<<idx); return msk; }
    int     reverseAll( int msk ){ for ( int i = (1<<30); i > 0; i >>= 1 ) msk ^= i; return msk; }
    void    showBits( int msk ){ for ( int i = (1<<30); i > 0; i >>= 1 ) cout << (bool)(msk&i); cout << "\n"; }
};

ll q; string s; int dp[1<<15];
int go( int msk )
{
    int& ret = dp[msk];
    if ( ~ret ) return ret;

    bitM bit; int mx = 0;
    for ( int i = 2; i < 12; ++i )
    {
        if ( bit.getbit( msk , i ) && bit.getbit( msk , i-1 ) && !bit.getbit( msk , i-2 ) )
        {
            int nwMsk = msk;
            nwMsk = bit.reverseBit( nwMsk , i   );
            nwMsk = bit.reverseBit( nwMsk , i-1 );
            nwMsk = bit.setbit( nwMsk , i-2 );
            mx = max( mx , go(nwMsk)+1 );
        }
    }

    for ( int i = 0; i < 10; ++i )
    {
        if ( bit.getbit( msk , i ) && bit.getbit( msk , i+1 ) && !bit.getbit( msk , i+2 ) )
        {
            int nwMsk = msk;
            nwMsk = bit.reverseBit( nwMsk , i   );
            nwMsk = bit.reverseBit( nwMsk , i+1 );
            nwMsk = bit.setbit( nwMsk , i+2 );
            mx = max( mx , go(nwMsk)+1 );
        }
    }

    return ret = mx;
}

int main()
{
    FASTIO //ONLINE__JUDGE();

    cin >> q;
    while ( q-- )
    {
        cin >> s; int msk = 0 , cnt = 0; bitM bit;
        for ( int i = 0,j = s.L-1; j >= 0; i++,j-- )
            if ( s[j] == 'o' ) msk = bit.setbit( msk , i ) , cnt++;
        mem( dp , -1 ); cout << cnt - go( msk ) << "\n";
    }
    return 0;
}


void ONLINE__JUDGE()
{
    #ifndef ONLINE_JUDGE
    freopen( "inp.c"         , "r" , stdin  );
    freopen( "OutPut.txt"   , "w" , stdout );
    #endif // ONLINE_JUDGE
}

