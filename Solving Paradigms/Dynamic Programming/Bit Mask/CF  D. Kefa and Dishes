// D. Kefa and Dishes
// https://codeforces.com/contest/580/problem/D

#include <bits/stdc++.h>
#include <cstdio>
#include <cstring>
#include <cstdlib>
 
#define FASTIO ios::sync_with_stdio(0); cin.tie(0);
#define show(x) cout << #x << " = " << x << "\n"
#define mem( a , b ) memset( a , b , sizeof a )
#define popcnt(x) __builtin_popcount(x)
#define all(x) x.begin() , x.end()
#define SZ(a) (int)a.size()
#define ll  long long
#define ld  long double
#define vii vector  <ll>
#define dqi deque   <ll>
#define sii set     <ll>
#define vpi vector  <pii>
#define mii map     <ll,ll>
#define pii pair    <ll,ll>
#define pi pair     <int,int>
#define vss vector  <string>
#define pb  push_back
#define F   first
#define S   second
#define L   length()
#define PI  3.141592654
#define OO (ll)1e18
#define mod(x,m) (x%m + m )%m
using namespace std;
void ONLINE__JUDGE();
 
pii swapii( pii pr ){ return { pr.S , pr.F }; }
int dx[] = {  0 ,  0 , -1 , +1 , -1 , +1 , -1 , +1 };
int dy[] = { -1 , +1 ,  0 ,  0 , -1 , +1 , +1 , -1 };
 
const ll MOD = 1e9 + 7;
const ll MAX = 1e4 + 9;
 
struct bitM
{
    int     setbit( int msk , int idx ){ msk |= (1<<idx); return msk; }
    bool    getbit( int msk , int idx ){ return msk&(1<<idx); }
    int     reverseBit( int msk , int idx ){ msk ^= (1<<idx); return msk; }
    int     reverseAll( int msk ){ for ( int i = (1<<30); i > 0; i >>= 1 ) msk ^= i; return msk; }
    void    showBits( int msk ){ for ( int i = (1<<30); i > 0; i >>= 1 ) cout << (bool)(msk&i); cout << "\n"; }
};
 
ll dp[(1<<20)][20];
ll x ,y , k ; vii vec; map < pii , ll > mp;
ll go( int msk = 0 , int prev = 19 )
{
    if ( popcnt( msk ) ==  y ) return 0;
 
    ll& ret = dp[msk][prev];
    if ( ~ret ) return ret;
 
    ll mx = -1*OO; bitM bit;
    for ( int i = 0; i < x; ++i )
        if ( !bit.getbit( msk , i ) )
        {
            int nwMsk = msk;
            nwMsk = bit.setbit( nwMsk , i );
            mx = max( mx , go( nwMsk , i ) + vec[i] + mp[ {prev , i} ] );
        }
    return ret = mx;
}
 
int main()
{
    FASTIO ONLINE__JUDGE();
 
    cin >> x >> y >> k; vec.resize(x);
    for ( ll& i : vec ) cin >> i;
    for ( int i = 0; i < k; ++i )
    {
        ll a, b, c; cin >> a >> b >> c;
        a--; b--; mp[ {a , b} ] = max( mp[ {a , b} ] , c );
    }
 
    mem( dp , -1 ); cout << go() << "\n";
    return 0;
}
 
 
void ONLINE__JUDGE()
{
    #ifndef ONLINE_JUDGE
    freopen( "inp.c"         , "r" , stdin  );
    //freopen( "OutPut.txt"   , "w" , stdout );
    #endif // ONLINE_JUDGE
}
 
