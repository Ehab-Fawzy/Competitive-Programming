// 763 - Fibinary Numbers
// https://onlinejudge.org/index.php?option=com_onlinejudge&Itemid=8&page=show_problem&problem=704

#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp> // Common file
#include <ext/pb_ds/tree_policy.hpp>
#include <functional> // for less

#pragma GCC optimize ("O3")
#pragma GCC optimize("Ofast")
#pragma GCC optimize ("unroll-loops")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")

#define FASTIO ios::sync_with_stdio(0); cin.tie(0);
#define show(x) cerr << #x << " = " << x << "\n"
#define mem( a , b ) memset( a , b , sizeof a )
#define popcnt(x) __builtin_popcount(x)
#define all(x) x.begin() , x.end()
#define mod(x,m) ((x%m + m )%m)
#define SZ(a) (int)a.size()
#define ll  long long
#define ld  long double
#define vii vector  <ll>
#define dqi deque   <ll>
#define sii set     <ll>
#define vpi vector  <pii>
#define mii map     <ll,ll>
#define pii pair    <ll,ll>
#define pi  pair    <int,int>
#define pb  push_back
#define F   first
#define S   second
#define L   length()
#define OO  (ll)1e18
#define EPS 1e-9
using namespace std;
using namespace __gnu_pbds;
void ONLINE__JUDGE();

typedef tree<ll, null_type, less<ll>, rb_tree_tag,
tree_order_statistics_node_update> ordered_set;
pii swapii( pii pr ){ return { pr.S , pr.F }; }
ll binEXP( ll x , ll pw , ll MOD = LLONG_MAX );
int dx[] = {  0 ,  0 , -1 , +1 , -1 , +1 , -1 , +1 };
int dy[] = { -1 , +1 ,  0 ,  0 , -1 , +1 , +1 , -1 };

const ll MOD = 1e9 + 7;
const ll MAX = 1e2 + 7;

const int base = 1e9;
typedef vector<int> bigint;

void Set( bigint &a ){
    while ( a.size() > 1 && a.back() == 0 ) a.pop_back();
}

void print( bigint a ){
    Set(a);
    cout << (a.size() == 0 ? 0 : a.back());
    for ( int i = a.size()-2; i >= 0; --i ){
        cout << setfill('0') << right << setw(9) << a[i];
    }
}

bigint Integer( string s ){
    bigint ans;
    if ( s[0] == '-' ) return ans;
    if ( s.size() == 0 ){ ans.pb(0); return ans; }

    while ( s.size()%9 != 0 ) s = '0' + s;
    for ( int i = 0; i < (int)s.size(); i += 9 ){
        int v = 0;
        for ( int j = i; j < i+9; j++ ) v = v*10 + (s[j] - '0');
        ans.insert( ans.begin() , v );
    }
    Set(ans); return ans;
}

bigint operator + ( bigint a , bigint b ){
    Set(a); Set(b); bigint ans; int carry = 0;

    for ( int i = 0; i <= (int)max( a.size() , b.size() )-1; ++i ){
        if ( i < (int)a.size() ) carry += a[i];
        if ( i < (int)b.size() ) carry += b[i];
        ans.pb( carry%base ); carry /= base;
    }
    if ( carry ) ans.pb( carry );
    Set(ans); return ans;
}

bigint operator - ( bigint a, bigint b ){
    Set(a); Set(b); bigint ans; int carry = 0;
    for ( int i = 0; i <= (a.size())-1; ++i ){
        carry += a[i] - (i < (int)b.size() ? b[i] : 0 );
        if ( carry < 0 ) ans.pb( carry + base ) , carry = -1;
        else ans.pb( carry ) , carry = 0;
    }
    Set(ans); return ans;
}

bool operator < ( bigint a , bigint b ){
    Set(a); Set(b);
    if ( a.size() != b.size() ) return a.size() < b.size();
    for ( int i = a.size()-1; i >= 0; --i ){
        if ( a[i] != b[i] ) return a[i] < b[i];
    }
    return false;
}
bool operator == ( bigint a , bigint b ){
    return ( !(a < b) && !(b < a) );
}
bool operator <= ( bigint a , bigint b ){
    return a < b || a == b;
}

bigint arr[MAX]; string a, b;

int main()
{
    FASTIO //ONLINE__JUDGE();

    arr[0] = Integer("1");
    arr[1] = Integer("2");
    for ( int i = 2; i < MAX; ++i ){
        arr[i] = arr[i - 1] + arr[i - 2];
    }

    bool f = 1;
    while ( cin >> a >> b ){

            if (f) f = 0;
            else cout << "\n";

        bigint cntA = Integer("0");
        bigint cntB = Integer("0");

        for ( int i = SZ(a)-1 , j = 0; i >= 0; --i,++j ){
            if ( a[i] == '1' ) cntA = cntA + arr[j];
        }
        for ( int i = SZ(b)-1 , j = 0; i >= 0; --i,++j ){
            if ( b[i] == '1' ) cntB = cntB + arr[j];
        }


        bigint ret = cntA + cntB; bool ok = 0; string res = "";

        if ( ret == Integer("0") ){
            cout << 0 << "\n"; continue;
        }
        for ( int i = MAX-1; i >= 0; --i ){
            if ( !ok ){
                if ( arr[i] <= ret ){
                    ret = ret - arr[i]; ok = 1; res += "1";
                }
            }
            else{
                if ( arr[i] <= ret ){
                    ret = ret - arr[i]; res += "1";
                }
                else{
                    res += "0";
                }
            }
        }
        cout << res << "\n";
    }
    return 0;
}


void ONLINE__JUDGE()
{
    #ifndef ONLINE_JUDGE
    freopen( "inp.c"         , "r" , stdin  );
    freopen( "OutPut.txt"   , "w" , stdout );
    #endif // ONLINE_JUDGE
}

ll binEXP( ll x , ll pw , ll MOD )
{ ll res=1; while(pw>0){ pw%2 ? res *= x : 0; x *= x; x%=MOD; pw /= 2; res%= MOD; } return res%=MOD; }
