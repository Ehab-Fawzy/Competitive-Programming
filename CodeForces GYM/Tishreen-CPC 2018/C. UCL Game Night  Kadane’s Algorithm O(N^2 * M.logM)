// C. UCL Game Night 
// dynamic programming 2D Maximum-sum subarray Kadaneâ€™s Algorithm O(N^2 * M.logM)

#include <bits/stdc++.h>
#include <cstdio>
#include <cstring>
#include <cstdlib>
 
#define FASTIO ios::sync_with_stdio(NULL); cin.tie(NULL);
#define show(x) cerr << #x << " = " << x << "\n"
#define mem( a , b ) memset( a , b , sizeof a )
#define popcnt(x) __builtin_popcount(x)
#define all(x) x.begin() , x.end()
#define SZ(a) (int)a.size()
#define ll  long long
#define ld  long double
#define vii vector  <ll>
#define dqi deque   <ll>
#define sii set     <ll>
#define vpi vector  <pii>
#define mii map     <ll,ll>
#define pii pair    <ll,ll>
#define vss vector  <string>
#define pb  push_back
#define F   first
#define S   second
#define L   length()
#define PI  3.141592654
#define OO (ll)1e18
#define mod(x,m) (x%m + m )%m
using namespace std;
void ONLINE__JUDGE();
 
pii swapii( pii pr ){ return { pr.S , pr.F }; }
int dx[] = {  0 ,  0 , -1 , +1 , -1 , +1 , -1 , +1 };
int dy[] = { -1 , +1 ,  0 ,  0 , -1 , +1 , +1 , -1 };
 
ll binEXP( ll x , ll pw , ll MOD )
{ ll res=1; while(pw>0){ pw%2 ? res *= x : 0; x *= x; x%=MOD; pw /= 2; res%= MOD; } return res%=MOD; }
 
const ll MOD = 1e9 + 7;
const ll MAX = 1e5 + 9;
 
ll q, x, y, s , arr[109][109];
 
ll getMax()
{
    for ( int i = 1; i < x; ++i )
        for ( int j = 0; j < y; ++j ) arr[i][j] += arr[i - 1][j];
 
    ll mx = 0;
    for ( int i = 0; i < x; ++i )
        for ( int j = i; j < x; ++j )
        {
            vii vec; ll cnt = 0; vec.pb(cnt);
            for ( int k = 0; k < y; ++k )
                cnt += arr[j][k] - ( i == 0 ? 0 : arr[i - 1][k]) , vec.pb(cnt);
 
            for ( int k = 1; k < SZ(vec); ++k )
            {
                if ( vec[k] <= s ) mx = max( mx , (ll)((j-i+1)*(k)) );
                else
                {
                    ll idx = lower_bound( all(vec) , vec[k]-s ) - vec.begin();
                    mx = max( mx , (ll)( (j-i+1)*(k-idx) ) );
                }
            }
        }
    return mx;
}
 
void Clear(){
    for ( int i = 0; i < 109; ++i )
        for ( int j = 0; j < 109; ++j ) arr[i][j] = 0;
}

int main()
{
    FASTIO ONLINE__JUDGE();
 
    ll q; cin >> q;
    while ( q-- )
    {
        cin >> x >> y >> s;
        for ( int i = 0; i < x; ++i )
            for ( int j = 0; j < y; ++j ) cin >> arr[i][j];
 
        cout << getMax() << "\n"; Clear();
    }
    return 0;
}
 
 
void ONLINE__JUDGE()
{
    #ifndef ONLINE_JUDGE
    freopen( "inp.c"         , "r" , stdin  );
    //freopen( "OutPut.txt"   , "w" , stdout );
    #endif // ONLINE_JUDGE
}
