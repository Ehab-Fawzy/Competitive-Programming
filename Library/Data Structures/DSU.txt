struct DSU
{
    vii parent, Rank;
    DSU( ll N )
    {
        Rank.assign( N+9 , 0 ); parent.assign( N+9 , 0 );
        for ( int i = 0; i <= N; ++i ) parent[i] = i;
    }
    ll findSet ( ll i ) { return parent[i] == i ? i : (parent[i] = findSet(parent[i])); }
    bool isSame( ll i , ll j ) { return findSet(i) == findSet(j); }
    void unionSet( ll i , ll j )
    {
        if ( !isSame( i , j ) )
        {
            ll x = findSet(i) , y = findSet(j);
            if ( Rank[x] > Rank[y] ) parent[y] = x;
            else
            {
                parent[x] = y;
                if ( Rank[x] == Rank[y] ) Rank[y]++;
            }
        }
    }
};