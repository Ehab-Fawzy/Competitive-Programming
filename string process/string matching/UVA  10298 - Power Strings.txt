// 10298 - Power Strings
// https://onlinejudge.org/index.php?option=com_onlinejudge&Itemid=8&page=show_problem&problem=1239

#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp> // Common file
#include <ext/pb_ds/tree_policy.hpp>
#include <functional> // for less

#pragma GCC optimize ("O3")
#pragma GCC optimize("Ofast")
#pragma GCC optimize ("unroll-loops")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")


#define FASTIO ios::sync_with_stdio(0); cin.tie(0);
#define show(x) cout << #x << " = " << x << "\n"
#define mem( a , b ) memset( a , b , sizeof a )
#define popcnt(x) __builtin_popcount(x)
#define all(x) x.begin() , x.end()
#define mod(x,m) ((x%m + m )%m)
#define SZ(a) (int)a.size()
#define ll  long long
#define ld  long double
#define vii vector  <ll>
#define dqi deque   <ll>
#define sii set     <ll>
#define vpi vector  <pii>
#define mii map     <ll,ll>
#define pii pair    <ll,ll>
#define pi  pair    <int,int>
#define pb  push_back
#define F   first
#define S   second
#define L   length()
#define OO  (ll)1e18
#define lSOne(x)(x&-x)
#define EPS 1e-20
using namespace std;
using namespace __gnu_pbds;
void ONLINE__JUDGE();

template<typename T>
using ordered_set = tree<T, null_type, less<T>, rb_tree_tag,
tree_order_statistics_node_update>;

pii swapii( pii pr ){ return { pr.S , pr.F }; }
ll binEXP( ll x , ll pw , ll MOD = LLONG_MAX );
int dx[] = {  0 ,  0 , -1 , +1 , -1 , +1 , -1 , +1 };
int dy[] = { -1 , +1 ,  0 ,  0 , -1 , +1 , +1 , -1 };

const ll MOD = 1e9 + 7;
const ll MAX = 2e5 + 7;

int q;
vii prefix_function( string pat ){
    vii pre; pre.resize(pat.L , 0);
    for ( int i = 1 , k = 0; i < (int)pat.L; ++i ){
        while ( k > 0 && pat[i] != pat[k] ){
            k = pre[k - 1];
        }
        if ( pat[i] == pat[k] ) k++;
        pre[i] = k;
    }
    return pre;
}
int kmp( string s , string pat ){
    int n = s.L , m = pat.L , ret = 0;
    vii pre = prefix_function( pat );
    for ( int i = 0 , k = 0; i < n; ++i ){
        while ( k > 0 && s[i] != pat[k] ){
            k = pre[k - 1];
        }
        if ( s[i] == pat[k] ) ++k;
        if ( k == m ){
            ret = i-k+2; break;
        }
    }
    return ret;
}

int main(){
    FASTIO //ONLINE__JUDGE();

    string pat;
    while ( getline(cin , pat) && pat != "." ){

        string s = pat; s.erase(0 , 1); s += pat;
        cout << pat.L / kmp( s , pat ) << "\n";
    }
    return 0;
}

void ONLINE__JUDGE()
{
    #ifndef ONLINE_JUDGE
    freopen( "inp.c"         , "r" , stdin  );
    //freopen( "OutPut.txt"   , "w" , stdout );
    #endif // ONLINE_JUDGE
}

ll binEXP( ll x , ll pw , ll MOD )
{ ll res=1; while(pw>0){ pw%2 ? res *= x : 0; x *= x; x%=MOD; pw /= 2; res%= MOD; } return res%=MOD; }
